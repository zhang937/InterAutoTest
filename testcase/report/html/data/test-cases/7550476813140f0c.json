{
  "uid" : "7550476813140f0c",
  "name" : "测试用例标题2",
  "fullName" : "testcase.alluretest.TestAllure#test_2",
  "historyId" : "fd58ce4969a340f7bd05549fae9dc967",
  "time" : {
    "start" : 1659438640772,
    "stop" : 1659438640772,
    "duration" : 0
  },
  "description" : "测试用例2,打印",
  "descriptionHtml" : "<p>测试用例2,打印</p>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: test_2() takes 0 positional arguments but 1 was given",
  "statusTrace" : "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x0000024622526048>\nwhen = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: \"Optional[Union[Type[BaseException], Tuple[Type[BaseException], ...]]]\" = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result = func()  # type: Optional[TResult]\n\nD:\\Python37\\lib\\site-packages\\_pytest\\runner.py:310: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python37\\lib\\site-packages\\_pytest\\runner.py:256: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nD:\\Python37\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\Python37\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\Python37\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nD:\\Python37\\lib\\site-packages\\_pytest\\runner.py:171: in pytest_runtest_call\n    raise e\nD:\\Python37\\lib\\site-packages\\_pytest\\runner.py:163: in pytest_runtest_call\n    item.runtest()\nD:\\Python37\\lib\\site-packages\\_pytest\\python.py:1627: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nD:\\Python37\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\Python37\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\Python37\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npyfuncitem = <Function test_2>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem: \"Function\") -> Optional[object]:\n        testfunction = pyfuncitem.obj\n        if is_async_function(testfunction):\n            async_warn_and_skip(pyfuncitem.nodeid)\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: test_2() takes 0 positional arguments but 1 was given\n\nD:\\Python37\\lib\\site-packages\\_pytest\\python.py:184: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "接口测试，只是用一级标签"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "alluretest"
  }, {
    "name" : "subSuite",
    "value" : "TestAllure"
  }, {
    "name" : "host",
    "value" : "PC-20210109YDJH"
  }, {
    "name" : "thread",
    "value" : "1368-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.alluretest"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "7550476813140f0c.json",
  "parameterValues" : [ ]
}